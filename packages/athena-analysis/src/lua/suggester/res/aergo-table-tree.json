{
  "system": {
    "getSender": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "getSender()"
        }
      ]
    },
    "getBlockheight": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "getBlockheight()"
        }
      ]
    },
    "getTxhash": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "getTxhash()"
        }
      ]
    },
    "getTimestamp": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "getTimestamp()"
        }
      ]
    },
    "getContractID": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "getContractID()"
        }
      ]
    },
    "setItem": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "setItem(${1:key}, ${2:value})"
        }
      ]
    },
    "getItem": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "getItem(${1:key})"
        }
      ]
    },
    "getAmount": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "getAmount()"
        }
      ]
    },
    "getCreator": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "getCreator()"
        }
      ]
    },
    "getOrigin": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "getOrigin()"
        }
      ]
    },
    "getPrevBlockHash": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "getPrevBlockHash()"
        }
      ]
    },
    "isContract": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "isContract(${1:address})"
        }
      ]
    },
    "isFeeDelegation": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "isFeeDelegation()"
        }
      ]
    },
    "print": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "print(${1:args...})"
        }
      ]
    }
  },
  "contract": {
    "send": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "send(${1:address}, ${2:amount})"
        }
      ]
    },
    "deploy": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "deploy(${1:code}, ${2:args...})"
        },
        {
          "type": "function",
          "snippet": "deploy.value(${1:amount})(${2:code}, ${3:args...})"
        }
      ]
    },
    "call": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "call(${1:address}, ${2:funcName}, ${3:args...})"
        },
        {
          "type": "function",
          "snippet": "call.value(${1:amount})(${2:address}, ${3:funcName}, ${4:args...})"
        }
      ]
    },
    "delegatecall": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "delegatecall(${1:address}, ${2:funcName}, ${3:args...})"
        }
      ]
    },
    "pcall": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "pcall(${1:func}, ${2:args...})"
        }
      ]
    },
    "balance": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "balance(${1:address})"
        }
      ]
    },
    "event": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "event(${1:eventName}, ${2:args...})"
        }
      ]
    },
    "stake": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "stake(${1:amount})"
        }
      ]
    },
    "unstake": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "unstake(${1:amount})"
        }
      ]
    },
    "vote": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "vote(${1:targets...})"
        }
      ]
    }
  },
  "state": {
    "var": {
      "__possibleValues": [
        {
          "type": "table",
          "snippet": "var {\n  ${1:key} = ${2:value}\n}"
        }
      ]
    },
    "value": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "value()"
        }
      ]
    },
    "map": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "map()"
        }
      ]
    },
    "array": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "array(${1:size})"
        }
      ]
    }
  },
  "db": {
    "exec": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "exec(\"${1:statement}\", ${2:values...})"
        }
      ]
    },
    "query": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "query(\"${1:statement}\", ${2:values...})"
        }
      ]
    },
    "prepare": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "prepare(\"${1:statement}\")"
        }
      ]
    },
    "last_insert_rowid": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "last_insert_rowid()"
        }
      ]
    }
  },
  "abi": {
    "register": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "register(${1:func...})"
        }
      ]
    },
    "payable": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "payable(${1:func...})"
        }
      ]
    },
    "register_view": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "register_view(${1:func...})"
        }
      ]
    },
    "fee_delegation": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "fee_delegation(${1:func...})"
        }
      ]
    }
  },
  "json": {
    "encode": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "encode(${1:rawValue})"
        }
      ]
    },
    "decode": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "decode(${1:encoded})"
        }
      ]
    }
  },
  "crypto": {
    "sha256": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "sha256(${1:value})"
        }
      ]
    },
    "ecverify": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "ecverify(${1:message}, ${2:signature}, ${3:address})"
        }
      ]
    }
  },
  "bignum": {
    "number": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "number(${1:value})"
        }
      ]
    },
    "isneg": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "isneg(${1:value})"
        }
      ]
    },
    "iszero": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "iszero(${1:value})"
        }
      ]
    },
    "tonumber": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "tonumber(${1:value})"
        }
      ]
    },
    "tostring": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "tostring(${1:value})"
        }
      ]
    },
    "neg": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "neg(${1:value})"
        }
      ]
    },
    "sqrt": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "sqrt(${1:value})"
        }
      ]
    },
    "compare": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "compare(${1:left}, ${2:right})"
        }
      ]
    },
    "add": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "add(${1:left}, ${2:right})"
        }
      ]
    },
    "sub": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "sub(${1:left}, ${2:right})"
        }
      ]
    },
    "mul": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "mul(${1:left}, ${2:right})"
        }
      ]
    },
    "mod": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "mod(${1:target}, ${2:value})"
        }
      ]
    },
    "div": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "div(${1:target}, ${2:value})"
        }
      ]
    },
    "pow": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "pow(${1:base}, ${2:exponent})"
        }
      ]
    },
    "divmod": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "divmod(${1:target}, ${2:value})"
        }
      ]
    },
    "powmod": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "powmod(${1:base}, ${2:exponent}, ${3:modValue})"
        }
      ]
    }
  },
  "string": {
    "byte": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "byte(${1:str}, ${2:start}, ${3:end})"
        }
      ]
    },
    "char": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "char(${1:charCode...})"
        }
      ]
    },
    "dump": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "dump(${1:function})"
        }
      ]
    },
    "find": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "find(${1:str}, ${2:pattern}, ${3:index}, ${4:plain})"
        }
      ]
    },
    "format": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "format(\"${1:text}\", ${2:value...})"
        }
      ]
    },
    "gmatch": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "gmatch(${1:str}, ${2:pattern})"
        }
      ]
    },
    "gsub": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "gsub(${1:str}, ${2:pattern}, ${3:replace}, ${4:n})"
        }
      ]
    },
    "len": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "len(${1:str})"
        }
      ]
    },
    "lower": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "lower(${1:str})"
        }
      ]
    },
    "match": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "match(${1:str}, ${2:pattern}, ${3:index})"
        }
      ]
    },
    "rep": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "rep(${1:str}, ${2:n})"
        }
      ]
    },
    "reverse": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "reverse(${1:str})"
        }
      ]
    },
    "sub": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "sub(${1:str}, ${2:start}, ${3:end})"
        }
      ]
    },
    "upper": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "upper(${1:str})"
        }
      ]
    }
  },
  "math": {
    "abs": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "abs(${1:x})"
        }
      ]
    },
    "ceil": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "ceil(${1:x})"
        }
      ]
    },
    "floor": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "floor(${1:x})"
        }
      ]
    },
    "pow": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "pow(${1:base}, ${2:exp})"
        }
      ]
    },
    "max": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "max(${1:v1}, ${2:v2...})"
        }
      ]
    },
    "min": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "min(${1:v1}, ${2:v2...})"
        }
      ]
    }
  },
  "table": {
    "concat": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "concat(${1:table}, ${2:separator}, ${3:start}, ${4:end})"
        }
      ]
    },
    "insert": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "insert(${1:table}, ${2:pos}, ${3:item})"
        }
      ]
    },
    "maxn": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "maxn(${1:table})"
        }
      ]
    },
    "remove": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "remove(${1:table}, ${2:pos})"
        }
      ]
    },
    "sort": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "sort(${1:table}, ${2:comparator})"
        }
      ]
    }
  },
  "bit": {
    "tobit": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "tobit(${1:x})"
        }
      ]
    },
    "tohex": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "tohex(${1:x}, ${2:n})"
        }
      ]
    },
    "bnot": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "bnot(${1:x})"
        }
      ]
    },
    "band": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "band(${1:v1}, ${2:v2...})"
        }
      ]
    },
    "bor": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "bor(${1:v1}, ${2:v2...})"
        }
      ]
    },
    "bxor": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "bxor(${1:v1}, ${2:v2...})"
        }
      ]
    },
    "lshift": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "lshift(${1:x}, ${2:n})"
        }
      ]
    },
    "rshift": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "rshift(${1:x}, ${2:n})"
        }
      ]
    },
    "arshift": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "arshift(${1:x}, ${2:n})"
        }
      ]
    },
    "rol": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "rol(${1:x}, ${2:n})"
        }
      ]
    },
    "ror": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "ror(${1:x}, ${2:n})"
        }
      ]
    },
    "bswap": {
      "__possibleValues": [
        {
          "type": "function",
          "snippet": "bswap(${1:x})"
        }
      ]
    }
  }
}
